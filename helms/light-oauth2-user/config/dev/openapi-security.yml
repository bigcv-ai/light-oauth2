# Security configuration for openapi-security in light-rest-4j. It is a specific config
# for OpenAPI framework security. It is introduced to support multiple frameworks in the
# same server instance. If this file cannot be found, the generic security.yml will be
# loaded for backward compatibility.
---
# Enable JWT verification flag.
enableVerifyJwt: ${SECURITY_ENABLE_VERIFY_JWT:false}

# Enable JWT scope verification. Only valid when enableVerifyJwt is true.
enableVerifyScope: ${SECURITY_ENABLE_VERIFY_SCOPE:true}

# User for test only. should be always be false on official environment.
enableMockJwt: ${SECURITY_ENABLE_MOCK_JWT:false}

# JWT signature public certificates. kid and certificate path mappings.
jwt:
  certificate:
    '100': ${SECURITY_JWT_CERTIFICATE_100:primary.crt}
    '101': ${SECURITY_JWT_CERTIFICATE_101:secondary.crt}
  clockSkewInSeconds: ${SECURITY_JWT_CLOCK_SKEW_IN_SECONDS:60}

# Enable or disable JWT token logging
# SECURITY_ENABLE_JWT_CACHE, SECURITY_BOOTSTRAP_FROM_KEY_SERVICE có thể bổ sung nếu có trong file
logJwtToken: ${SECURITY_LOG_JWT_TOKEN:true}

# Enable or disable client_id, user_id and scope logging.
logClientUserScope: ${SECURITY_LOG_CLIENT_USER_SCOPE:false} false

# Enable JWT token cache to speed up verification. This will only verify expired time
# and skip the signature verification as it takes more CPU power and long time.
enableJwtCache: ${SECURITY_ENABLE_JWT_CACHE:true}

# If you are using light-oauth2, then you don't need to have oauth subfolder for public
# key certificate to verify JWT token, the key will be retrieved from key endpoint once
# the first token is arrived. Default to false for dev environment without oauth2 server
# or official environment that use other OAuth 2.0 providers.
bootstrapFromKeyService: ${SECURITY_BOOTSTRAP_FROM_KEY_SERVICE:false}
